# DevOps와 MLOps 비교
## Continuous Integration (CI) 요약
### 1. 정의
지속적 통합(CI)은 소스코드 변경사항을 자주(빈번하게) 통합(merge)하고,
그때마다 코드베이스가 정상 작동하는 상태인지 자동으로 확인하는 개발 관행입니다.
Continuous integration (CI) is the practice of integrating source code changes frequently and ensuring that the integrated codebase is in a workable state.

### 2. 일반적인 워크플로우
1. 개발자가 integration branch (예: `main`, `develop`)에 코드 변경 사항을 병합(merge)
2. CI 시스템이 자동으로:
    - 빌드(build) 수행
    - 테스트(test) 실행
3. 이 프로세스는:
    - 커밋마다 즉시 실행되거나
    - 스케줄 기반(예: 하루 1회)으로 실행될 수 있음

📌 도구 예시: GitHub Actions, Jenkins, GitLab CI, CircleCI 등

### 3. 역사
- Grady Booch(객체지향 설계자)가 1991년 처음 CI라는 용어를 제안
- 당시에는 "자주 통합"보다는 "정기적 통합"에 가까웠음
- 이후 CI는 하루에도 여러 번 통합하고 테스트하는 현대적인 의미로 확장됨

### 핵심 포인트 정리

| 항목 | 설명 |
| --- | --- |
| **목적** | 통합 시점에서 오류를 조기에 발견하고, 안정적인 코드 유지 |
| **이점** | 빠른 피드백, 배포 속도 향상, 코드 품질 개선 |
| **자동화 대상** | 빌드, 유닛 테스트, 정적 분석, 종속성 설치 등 |
